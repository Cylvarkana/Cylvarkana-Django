# Generated by Django 5.1.1 on 2024-10-08 03:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BotTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('args', models.JSONField(blank=True, null=True)),
                ('kwargs', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscordGuild',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('icon', models.URLField(max_length=124)),
            ],
        ),
        migrations.CreateModel(
            name='DiscordUser',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('global_name', models.CharField(blank=True, max_length=64, null=True)),
                ('name', models.CharField(max_length=64)),
                ('bot', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DiscordChannel',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('topic', models.TextField(blank=True, null=True)),
                ('guild_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='ambivis.discordguild')),
            ],
        ),
        migrations.CreateModel(
            name='DiscordRole',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('guild_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='ambivis.discordguild')),
            ],
        ),
        migrations.AddField(
            model_name='discordguild',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owner', to='ambivis.discorduser'),
        ),
        migrations.CreateModel(
            name='RSSSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=True)),
                ('color', models.CharField(choices=[('#FF0000', 'Red'), ('#00FF00', 'Green'), ('#0000FF', 'Blue'), ('#FFFF00', 'Yellow'), ('#FF00FF', 'Magenta'), ('#00FFFF', 'Cyan'), ('#000000', 'Black'), ('#FFFFFF', 'White'), ('#FFD700', 'Gold')], default='#00FF00', max_length=7)),
                ('discord_channels', models.ManyToManyField(blank=True, related_name='rss_feed_sources', to='ambivis.discordchannel')),
            ],
            options={
                'verbose_name_plural': 'RSS sources',
            },
        ),
        migrations.CreateModel(
            name='RSSFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(help_text='Keyword to filter the feed entries', max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('discord_channels', models.ManyToManyField(blank=True, related_name='rss_feed_filters', to='ambivis.discordchannel')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='ambivis.rsssource')),
            ],
            options={
                'verbose_name_plural': 'RSS filters',
            },
        ),
        migrations.CreateModel(
            name='RSSEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('enclosure', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('published_date', models.DateTimeField()),
                ('guid', models.CharField(max_length=255, unique=True)),
                ('awaiting_delivery', models.BooleanField(default=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='ambivis.rsssource')),
            ],
            options={
                'verbose_name_plural': 'RSS entries',
            },
        ),
        migrations.CreateModel(
            name='DiscordGuildMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=64)),
                ('pending', models.BooleanField()),
                ('avatar', models.URLField(blank=True, max_length=124, null=True)),
                ('guild_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='ambivis.discordguild')),
                ('roles', models.ManyToManyField(blank=True, related_name='member_roles', to='ambivis.discordrole')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guild_memberships', to='ambivis.discorduser')),
            ],
            options={
                'unique_together': {('user_id', 'guild_id')},
            },
        ),
    ]
